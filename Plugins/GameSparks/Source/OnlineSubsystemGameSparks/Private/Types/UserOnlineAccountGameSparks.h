#pragma once

#include "../OnlineSubsystemGameSparksPrivatePCH.h"
#include "UserOnlineAccountGameSparks.h"
#include "OnlineSubsystemTypes.h"
#include <GameSparks/generated/GSResponses.h>


/**
 * Info associated with an user account generated by this online service
 */
class FUserOnlineAccountGameSparks : public FUserOnlineAccount
{
public:
    FUserOnlineAccountGameSparks(const GameSparks::Api::Responses::AuthenticationResponse& response_)
            : response(response_)
            , UserIdPtr(new FUniqueNetIdString(response_.GetUserId().GetValue().c_str())) {}

    virtual ~FUserOnlineAccountGameSparks() {}

    // FOnlineUser

    virtual TSharedRef<const FUniqueNetId> GetUserId() const override;
    virtual FString GetRealName() const override;
    virtual bool GetUserAttribute(const FString& AttrName, FString& OutAttrValue) const override;

#if GS_UE_VERSION >= GS_MAKE_VERSION(4,12)
    virtual FString GetDisplayName(const FString& Platform = FString()) const override;
#else
    virtual FString GetDisplayName() const override;
#endif

#if GS_UE_VERSION >= GS_MAKE_VERSION(4,11)
    virtual bool SetUserAttribute(const FString& AttrName, const FString& AttrValue) override;
#endif

    // FUserOnlineAccount

    virtual FString GetAccessToken() const override;
    virtual bool GetAuthAttribute(const FString& AttrName, FString& OutAttrValue) const override;

    // FUserOnlineAccountGameSparks
    GameSparks::Api::Responses::AuthenticationResponse response;

    /** User Id represented as a FUniqueNetId */
    TSharedRef<const FUniqueNetId> UserIdPtr;
};

/** Mapping from user id to his internal online account info (only one per user) */
typedef TMap<FString, TSharedRef<FUserOnlineAccountGameSparks> > FUserOnlineAccountGameSparksMap;
